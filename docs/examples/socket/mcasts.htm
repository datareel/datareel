<!doctype html>
<!-- ******************************* -->
<!-- ******** Start of Page ******** -->
<!-- ******************************* -->
<!-- *********************************************************** -->
<!-- HTML Page -->
<!-- Designed For: FireFox, Chrome, Safari -->
<!-- Published By: DataReel Software Development -->
<!-- Content Last Modified: 01/15/2024 -->
<!-- File Creation Date: 01/15/2024 20:40:06 EST -->
<!-- *** -->
<!-- Package version: 12.3.10 -->
<!-- *** -->
<!-- Copyright (c) 1999-2024 DataReel Software Development -->
<!-- *********************************************************** -->
<!-- *********** HTML Page Description and Details ************* -->
<!-- *********************************************************** -->
<!-- *** -->
<!-- START OF LICENSING AND DISCLAIMER AGREEMENT -->
<!-- *** -->
<!-- This HTML page and its derivatives are copyright (c) 1999-2024, by -->
<!-- DataReel Software Development. This HTML page and any derivative Web -->
<!-- objects are published on the Internet for public viewing only. -->
<!-- Reproduction of any HTML page and/or Web objects published on -->
<!-- this Website is prohibited unless authorized in writing by -->
<!-- DataReel Software Development or authorized reseller. Reproduction of any -->
<!-- third party code used to produce pages on this Website is subject to -->
<!-- the third party licensing and distribution agreement. -->
<!-- *** -->
<!-- THIS SOFTWARE IS PROVIDED AS IS WITHOUT WARRANTY OF ANY KIND. THE -->
<!-- ENTIRE RISK OF THE QUALITY AND PERFORMANCE OF THIS SOFTWARE IS WITH -->
<!-- YOU. SHOULD ANY ELEMENT OF THIS SOFTWARE PROVE DEFECTIVE, YOU WILL -->
<!-- ASSUME THE COST OF ALL NECESSARY SERVICING, REPAIR, OR CORRECTION. -->
<!-- *** -->
<!-- *********************************************************** -->
<!-- *************** THIRD PARTY ACKNOWLEDGMENT **************** -->
<!-- *********************************************************** -->
<!-- *** -->
<!-- NONE -->
<!-- *** -->
<!-- END OF LICENSING AND DISCLAIMER AGREEMENT -->
<!-- *** -->
<!-- HTML Internet page -->
<!-- *********************************************************** -->
<!-- PAGE CONTENT STARTS BELOW -->

<html lang="en" data-bs-theme="auto">
  <head>
<!--HEADSTART-->
<!--HEADEND-->
    <title>mcasts example</title>
    </head>
    <body>



<FONT FACE="Courier New" SIZE=3><PRE>
<FONT COLOR="#ff0000">// ------------------------------- //</FONT>
<FONT COLOR="#ff0000">// -------- Start of File -------- //</FONT>
<FONT COLOR="#ff0000">// ------------------------------- //</FONT>
<FONT COLOR="#ff0000">// ----------------------------------------------------------- // </FONT>
<FONT COLOR="#ff0000">// C++ Source Code File Name: server.cpp</FONT>
<FONT COLOR="#ff0000">// C++ Compiler Used: MSVC, BCC32, GCC, HPUX aCC, SOLARIS CC</FONT>
<FONT COLOR="#ff0000">// Produced By: DataReel Software Development Team</FONT>
<FONT COLOR="#ff0000">// File Creation Date: 10/30/2001</FONT>
<FONT COLOR="#ff0000">// Date Last Modified: 06/17/2016</FONT>
<FONT COLOR="#ff0000">// Copyright (c) 2001-2024 DataReel Software Development</FONT>
<FONT COLOR="#ff0000">// ----------------------------------------------------------- // </FONT>
<FONT COLOR="#ff0000">// ------------- Program Description and Details ------------- // </FONT>
<FONT COLOR="#ff0000">// ----------------------------------------------------------- // </FONT>
<FONT COLOR="#ff0000">/*
This library is free software; you can redistribute it and/or
modify it under the terms of the GNU Lesser General Public
License as published by the Free Software Foundation; either
version 2.1 of the License, or (at your option) any later version.
 
This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public
License along with this library; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  
USA

Simple multicast server demo using the gxSocket class. This 
test program uses a UDP socket to join a IP multicast group 
and send/receive datagrams from a multicast group. Multicast 
addresses range from 224.0.0.0 to 239.255.255.255 with addresses 
from 224.0.0.0 to 224.0.0.255 reserved for multicast routing 
information. A multicast address identifies a set of receivers 
for multicast messages. A sender can send datagrams to any group 
without being a member of that group. Clients must be member of
the multicast group in order to receive the multicast datagram
message.

NOTE: The Multicast examples programs will not compile using
BCC32 5.5.1. The compiler complains about the IP_MULTICAST_TTL
definition, the ip_mreq multicast address join structure, and the
IP_ADD_MEMBERSHIP definition. These items are part of the Winsock
library yet the BCC compiler will not recognize them.
*/</FONT>
<FONT COLOR="#ff0000">// ----------------------------------------------------------- // </FONT>
#include "gxdlcode.h"

#if defined (__USE_ANSI_CPP__) <FONT COLOR="#ff0000">// Use the ANSI Standard C++ library</FONT>
#include &lt;iostream&gt;
using namespace std; <FONT COLOR="#ff0000">// Use unqualified names for Standard C++ library</FONT>
#else <FONT COLOR="#ff0000">// Use the old iostream library by default</FONT>
#include &lt;iostream.h&gt;
#endif <FONT COLOR="#ff0000">// __USE_ANSI_CPP__</FONT>

#include &lt;string.h&gt;
#include &lt;stdlib.h&gt;
#include "gxsocket.h"

#ifdef __BCC32__
int main() { return 0; }
#else
int main(int argc, char **argv)
{
  <FONT COLOR="#ff0000">// Check arguments. Should be only one: the port number to bind to.</FONT>
  if(argc != 3) {
    cerr &lt;&lt; "Usage: " &lt;&lt; argv[0] &lt;&lt; " &lt;Multicast IP&gt; &lt;Multicast Port&gt;" 
	 &lt;&lt; "\n" &lt;&lt; flush;
    cerr &lt;&lt; "Example: " &lt;&lt; argv[0] &lt;&lt; " 225.0.0.39 12345" &lt;&lt; "\n" &lt;&lt; flush;
    return 1;
  }

  char *multicast_ip = argv[1];
  unsigned short port = (unsigned short) atoi(argv[2]);
  int rv;

  cout &lt;&lt; "Construcing datagram socket..." &lt;&lt; "\n" &lt;&lt; flush;
  gxSocket server(SOCK_DGRAM, SOCK_DGRAM, IPPROTO_UDP, port, multicast_ip);
  if(!server) {
    cout &lt;&lt; server.SocketExceptionMessage() &lt;&lt; "\n" &lt;&lt; flush;
    return 1;
  }
  
  <FONT COLOR="#ff0000">// Set the TTL of multicast packet to limit the number of hops a </FONT>
  <FONT COLOR="#ff0000">// multicast packet can traverse from the sender. As the TTL values </FONT>
  <FONT COLOR="#ff0000">// increase a router will expand the number of hops they will forward a</FONT>
  <FONT COLOR="#ff0000">// multicast packet:</FONT>
  <FONT COLOR="#ff0000">// 0:   Restricted to the same host </FONT>
  <FONT COLOR="#ff0000">// 1:   Restricted to the same subnet </FONT>
  <FONT COLOR="#ff0000">// 32:  Restricted to the same site </FONT>
  <FONT COLOR="#ff0000">// 64:  Restricted to the same region </FONT>
  <FONT COLOR="#ff0000">// 128: Restricted to the same continent </FONT>
  <FONT COLOR="#ff0000">// 255: Unrestricted </FONT>
  unsigned char multicast_TTL = 1; <FONT COLOR="#ff0000">// Restricted to the same subnet</FONT>
  rv = server.SetSockOpt(IPPROTO_IP, IP_MULTICAST_TTL,
			 (void *)&amp;multicast_TTL, sizeof(multicast_TTL));
  if(rv &lt; 0) {
    cout &lt;&lt; "Could not change the default IP packet TTL" &lt;&lt; "\n" &lt;&lt; flush;
    cout &lt;&lt;  server.SocketExceptionMessage() &lt;&lt; "\n" &lt;&lt; flush;
    cout &lt;&lt; "\n" &lt;&lt; flush;
  }

  cout &lt;&lt; "Sending multicast messages to group " &lt;&lt; multicast_ip &lt;&lt; "\n" 
       &lt;&lt; flush;
  cout &lt;&lt; "Sending datagrams on port " &lt;&lt; port &lt;&lt; "\n" &lt;&lt; flush;
  cout &lt;&lt; "Press Ctrl-C to exit" &lt;&lt; "\n" &lt;&lt; flush;

  const char *message = "The quick brown fox jumps over the lazy dog \
0123456789\n";

  while(1) {
    rv = server.SendTo((char *)message, strlen(message));
    if(rv &lt; 0) {
      cout &lt;&lt; server.SocketExceptionMessage() &lt;&lt; "\n" &lt;&lt; flush;
      break;
    }
#ifdef __WIN32__
    Sleep(1000);
#else
    sleep(1);
#endif
  }

  cout &lt;&lt; "Exiting..." &lt;&lt; "\n" &lt;&lt; flush;
  server.Close(); <FONT COLOR="#ff0000">// Close the socket connection</FONT>
  server.ReleaseSocketLibrary();
  return 0;
}
#endif <FONT COLOR="#ff0000">// __BCC32__</FONT>
<FONT COLOR="#ff0000">// ----------------------------------------------------------- // </FONT>
<FONT COLOR="#ff0000">// ------------------------------- //</FONT>
<FONT COLOR="#ff0000">// --------- End of File --------- //</FONT>
<FONT COLOR="#ff0000">// ------------------------------- //</FONT>

</PRE></FONT>


  </body>
</html>

<!-- PAGE CONTENT ENDS ABOVE -->
<!-- *********************************************************** -->
<!-- ******************************* -->
<!-- ********* End of Page ********* -->
<!-- ******************************* -->
