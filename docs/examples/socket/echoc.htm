<!doctype html>
<!-- ******************************* -->
<!-- ******** Start of Page ******** -->
<!-- ******************************* -->
<!-- *********************************************************** -->
<!-- HTML Page -->
<!-- Designed For: FireFox, Chrome, Safari -->
<!-- Published By: DataReel Software Development -->
<!-- Content Last Modified: 01/15/2024 -->
<!-- File Creation Date: 01/15/2024 20:36:51 EST -->
<!-- *** -->
<!-- Package version: 12.3.10 -->
<!-- *** -->
<!-- Copyright (c) 1999-2024 DataReel Software Development -->
<!-- *********************************************************** -->
<!-- *********** HTML Page Description and Details ************* -->
<!-- *********************************************************** -->
<!-- *** -->
<!-- START OF LICENSING AND DISCLAIMER AGREEMENT -->
<!-- *** -->
<!-- This HTML page and its derivatives are copyright (c) 1999-2024, by -->
<!-- DataReel Software Development. This HTML page and any derivative Web -->
<!-- objects are published on the Internet for public viewing only. -->
<!-- Reproduction of any HTML page and/or Web objects published on -->
<!-- this Website is prohibited unless authorized in writing by -->
<!-- DataReel Software Development or authorized reseller. Reproduction of any -->
<!-- third party code used to produce pages on this Website is subject to -->
<!-- the third party licensing and distribution agreement. -->
<!-- *** -->
<!-- THIS SOFTWARE IS PROVIDED AS IS WITHOUT WARRANTY OF ANY KIND. THE -->
<!-- ENTIRE RISK OF THE QUALITY AND PERFORMANCE OF THIS SOFTWARE IS WITH -->
<!-- YOU. SHOULD ANY ELEMENT OF THIS SOFTWARE PROVE DEFECTIVE, YOU WILL -->
<!-- ASSUME THE COST OF ALL NECESSARY SERVICING, REPAIR, OR CORRECTION. -->
<!-- *** -->
<!-- *********************************************************** -->
<!-- *************** THIRD PARTY ACKNOWLEDGMENT **************** -->
<!-- *********************************************************** -->
<!-- *** -->
<!-- NONE -->
<!-- *** -->
<!-- END OF LICENSING AND DISCLAIMER AGREEMENT -->
<!-- *** -->
<!-- HTML Internet page -->
<!-- *********************************************************** -->
<!-- PAGE CONTENT STARTS BELOW -->

<html lang="en" data-bs-theme="auto">
  <head>
<!--HEADSTART-->
<!--HEADEND-->
    <title>echoc example</title>
    </head>
    <body>



<FONT FACE="Courier New" SIZE=3><PRE>
<FONT COLOR="#ff0000">// ------------------------------- //</FONT>
<FONT COLOR="#ff0000">// -------- Start of File -------- //</FONT>
<FONT COLOR="#ff0000">// ------------------------------- //</FONT>
<FONT COLOR="#ff0000">// ----------------------------------------------------------- // </FONT>
<FONT COLOR="#ff0000">// C++ Source Code File Name: client.cpp</FONT>
<FONT COLOR="#ff0000">// C++ Compiler Used: MSVC, BCC32, GCC, HPUX aCC, SOLARIS CC</FONT>
<FONT COLOR="#ff0000">// Produced By: DataReel Software Development Team</FONT>
<FONT COLOR="#ff0000">// File Creation Date: 11/02/2001</FONT>
<FONT COLOR="#ff0000">// Date Last Modified: 06/17/2016</FONT>
<FONT COLOR="#ff0000">// Copyright (c) 2001-2024 DataReel Software Development</FONT>
<FONT COLOR="#ff0000">// ----------------------------------------------------------- // </FONT>
<FONT COLOR="#ff0000">// ------------- Program Description and Details ------------- // </FONT>
<FONT COLOR="#ff0000">// ----------------------------------------------------------- // </FONT>
<FONT COLOR="#ff0000">/*
This library is free software; you can redistribute it and/or
modify it under the terms of the GNU Lesser General Public
License as published by the Free Software Foundation; either
version 2.1 of the License, or (at your option) any later version.
 
This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
Lesser General Public License for more details.
 
You should have received a copy of the GNU Lesser General Public
License along with this library; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  
USA

Simple TCP echo client using the gxSocket class.
*/</FONT>
<FONT COLOR="#ff0000">// ----------------------------------------------------------- // </FONT>
#include "gxdlcode.h"

#if defined (__USE_ANSI_CPP__) <FONT COLOR="#ff0000">// Use the ANSI Standard C++ library</FONT>
#include &lt;iostream&gt;
using namespace std; <FONT COLOR="#ff0000">// Use unqualified names for Standard C++ library</FONT>
#else <FONT COLOR="#ff0000">// Use the old iostream library by default</FONT>
#include &lt;iostream.h&gt;
#endif <FONT COLOR="#ff0000">// __USE_ANSI_CPP__</FONT>

#include &lt;string.h&gt;
#include &lt;stdlib.h&gt;
#include "gxsocket.h"

int main(int argc, char **argv)
{
  if((argc &lt; 2) || (argc &gt; 3)) {
    cerr &lt;&lt; "Usage: " &lt;&lt; argv[0] &lt;&lt; " server [port]" &lt;&lt; "\n";
    return 1;
  }

  char *server_ip = argv[1];
  unsigned short port = 7;
  if(argc == 3) port = (unsigned short)atoi(argv[2]);

  cout &lt;&lt; "Constructing a stream client" &lt;&lt; "\n";
  gxSocket client(SOCK_STREAM, port, server_ip);
  if(!client) {
    cout &lt;&lt; client.SocketExceptionMessage() &lt;&lt; "\n";
    return 1;
  }

  <FONT COLOR="#ff0000">// Connect to the server</FONT>
  if(client.Connect() &lt; 0) {
    cout &lt;&lt; client.SocketExceptionMessage() &lt;&lt; "\n";
    return 1;
  }

  char *echo_string = "The quick brown fox jumps over the lazy dog \
0123456789\n";
  int echo_string_len = strlen(echo_string);

  <FONT COLOR="#ff0000">// Send the string to the server</FONT>
  cout &lt;&lt; "Sending a string to the echo server..." &lt;&lt; "\n";
  int rv = client.Send((char *)echo_string, echo_string_len);
  if(rv &lt; 0) {
    cout &lt;&lt; client.SocketExceptionMessage() &lt;&lt; "\n";
    return 1;
  }
  cout &lt;&lt; "Sent " &lt;&lt; rv &lt;&lt; " bytes" &lt;&lt; "\n";

  char echo_buffer[255];
  int bytes_read = 0; <FONT COLOR="#ff0000">// Total bytes read</FONT>
  
  <FONT COLOR="#ff0000">// Read the bytes sent back from the server</FONT>
  while(bytes_read &lt; echo_string_len) {
    <FONT COLOR="#ff0000">// Block until the server sends some data</FONT>
    rv = client.RawRead((char *)echo_buffer, sizeof(echo_buffer));
    if(rv &lt; 0) {
      cout &lt;&lt; client.SocketExceptionMessage() &lt;&lt; "\n";
      break;
    }
    bytes_read += rv;
    echo_buffer[rv] = 0; <FONT COLOR="#ff0000">// Null terminate the string</FONT>
    cout &lt;&lt; echo_buffer;
  }
  cout &lt;&lt; "Received " &lt;&lt; bytes_read &lt;&lt; " bytes" &lt;&lt; "\n";

  cout &lt;&lt; "Exiting..." &lt;&lt; "\n";
  client.Close(); <FONT COLOR="#ff0000">// Close the socket connection</FONT>
  client.ReleaseSocketLibrary();
  
  return 0;
}
<FONT COLOR="#ff0000">// ----------------------------------------------------------- // </FONT>
<FONT COLOR="#ff0000">// ------------------------------- //</FONT>
<FONT COLOR="#ff0000">// --------- End of File --------- //</FONT>
<FONT COLOR="#ff0000">// ------------------------------- //</FONT>

</PRE></FONT>


  </body>
</html>

<!-- PAGE CONTENT ENDS ABOVE -->
<!-- *********************************************************** -->
<!-- ******************************* -->
<!-- ********* End of Page ********* -->
<!-- ******************************* -->
