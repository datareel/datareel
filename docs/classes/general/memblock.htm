<!doctype html>
<!-- ******************************* -->
<!-- ******** Start of Page ******** -->
<!-- ******************************* -->
<!-- *********************************************************** -->
<!-- HTML Page -->
<!-- Designed For: FireFox, Chrome, Safari -->
<!-- Published By: DataReel Software Development -->
<!-- Content Last Modified: 01/15/2024 -->
<!-- File Creation Date: 01/15/2024 20:46:24 EST -->
<!-- *** -->
<!-- Package version: 12.3.10 -->
<!-- *** -->
<!-- Copyright (c) 1999-2024 DataReel Software Development -->
<!-- *********************************************************** -->
<!-- *********** HTML Page Description and Details ************* -->
<!-- *********************************************************** -->
<!-- *** -->
<!-- START OF LICENSING AND DISCLAIMER AGREEMENT -->
<!-- *** -->
<!-- This HTML page and its derivatives are copyright (c) 1999-2024, by -->
<!-- DataReel Software Development. This HTML page and any derivative Web -->
<!-- objects are published on the Internet for public viewing only. -->
<!-- Reproduction of any HTML page and/or Web objects published on -->
<!-- this Website is prohibited unless authorized in writing by -->
<!-- DataReel Software Development or authorized reseller. Reproduction of any -->
<!-- third party code used to produce pages on this Website is subject to -->
<!-- the third party licensing and distribution agreement. -->
<!-- *** -->
<!-- THIS SOFTWARE IS PROVIDED AS IS WITHOUT WARRANTY OF ANY KIND. THE -->
<!-- ENTIRE RISK OF THE QUALITY AND PERFORMANCE OF THIS SOFTWARE IS WITH -->
<!-- YOU. SHOULD ANY ELEMENT OF THIS SOFTWARE PROVE DEFECTIVE, YOU WILL -->
<!-- ASSUME THE COST OF ALL NECESSARY SERVICING, REPAIR, OR CORRECTION. -->
<!-- *** -->
<!-- *********************************************************** -->
<!-- *************** THIRD PARTY ACKNOWLEDGMENT **************** -->
<!-- *********************************************************** -->
<!-- *** -->
<!-- NONE -->
<!-- *** -->
<!-- END OF LICENSING AND DISCLAIMER AGREEMENT -->
<!-- *** -->
<!-- HTML Internet page -->
<!-- *********************************************************** -->
<!-- PAGE CONTENT STARTS BELOW -->

<html lang="en" data-bs-theme="auto">
  <head>
<!--HEADSTART-->
<!--HEADEND-->
    <title>memblock class</title>
    </head>
    <body>




<P><!-- HTML file generated by: inc2help version 1034.101 --></P>
<H1 ALIGN="CENTER">Memory Block Class</H1>
<P><HR></P>
<B><U><FONT SIZE=4><P>Topics</B></U></FONT>:</P>
<P><A HREF="#Overview">Overview</A><BR>
<A HREF="#Constants">Constants</A><BR>
<A HREF="#Functions">Functions</A></P>
<P><HR></P>
<P><!-- New Section --><A NAME="Overview"><B><FONT SIZE=4>Overview</A></B></FONT> </P>
<P>The MemoryBlock class is a general-purpose data structure is use by the <A HREF="devcache.htm">Device Cache</A> classes to store data in small fixed length blocks of memory.</P>
<P><HR></P>
<B><FONT SIZE=4><P><A NAME="Constants">Constants</A></P>
</B></FONT><PRE>const unsigned <B>MEMORY_BLOCK_SIZE</B> = 1024; // Fixed Block size</PRE>
<P><HR></P>
<P><!-- New Section --><A NAME="Functions"><B><FONT SIZE=4>Functions</A></B></FONT> </P>
<P><A HREF="#MemoryBlock">MemoryBlock::MemoryBlock()</A><BR>
<A HREF="#GetDimLen">MemoryBlock::GetDimLen()</A><BR>
<A HREF="#Load">MemoryBlock::Load()</A><BR>
<A HREF="#length">MemoryBlock::length()</A><BR>
<A HREF="#m_buf">MemoryBlock::m_buf()</A><BR>
<A HREF="#resize">MemoryBlock::resize()</A></P>
<B><FONT COLOR="#000080"><P><A NAME="MemoryBlock">MemoryBlock::MemoryBlock()</A></B></FONT>&nbsp;-&nbsp;Public member function used to construct a memory block object and null the memory block.</P>
<B><FONT COLOR="#000080"><P><A NAME="GetDimLen">unsigned MemoryBlock::GetDimLen()</A></B></FONT>&nbsp;-&nbsp;Public member function that returns the maximum number of bytes a block can contain.</P>
<B><FONT COLOR="#000080"><P><A NAME="Load">void MemoryBlock::Load(const void *buf, unsigned bytes)</A></B></FONT>&nbsp;-&nbsp;Public member function used to load data into a buffer. <B>NOTE:</B> The byte size will automatically be truncated if the size of the fixed length block is exceeded.</P>
<B><FONT COLOR="#000080"><P><A NAME="length">unsigned MemoryBlock::length()</A></B></FONT>&nbsp;-&nbsp;Public member function that returns the logical length (number of byte actually used) of a memory block.</P>
<B><FONT COLOR="#000080"><P><A NAME="m_buf">char *MemoryBlock::m_buf()</A></B></FONT>&nbsp;-&nbsp;Public member function that returns a pointer to the memory block.</P>
<B><FONT COLOR="#000080"><P><A NAME="m_buf_overload_1">const char *MemoryBlock::m_buf()</A></B></FONT>&nbsp;-&nbsp;Public member function that returns a pointer to the memory buffer.</P>
<B><FONT COLOR="#000080"><P><A NAME="resize">int MemoryBlock::resize(unsigned bytes)</A></B></FONT>&nbsp;-&nbsp;Public member function used to resize the logical length of this block. Returns false if the fixed length is exceeded.</P>
<P><HR></P>
<P ALIGN="CENTER"><CENTER><TABLE BORDER CELLSPACING=1 BORDERCOLOR="#000000">
<TR><TD VALIGN="MIDDLE">
<P ALIGN="CENTER"><B>End Of Document</B></TD>
</TR>
</TABLE>
</CENTER></P>

<P>&nbsp;</P>


  </body>
</html>

<!-- PAGE CONTENT ENDS ABOVE -->
<!-- *********************************************************** -->
<!-- ******************************* -->
<!-- ********* End of Page ********* -->
<!-- ******************************* -->
