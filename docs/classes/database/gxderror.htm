<!doctype html>
<!-- ******************************* -->
<!-- ******** Start of Page ******** -->
<!-- ******************************* -->
<!-- *********************************************************** -->
<!-- HTML Page -->
<!-- Designed For: FireFox, Chrome, Safari -->
<!-- Published By: DataReel Software Development -->
<!-- Content Last Modified: 01/15/2024 -->
<!-- File Creation Date: 01/15/2024 20:45:30 EST -->
<!-- *** -->
<!-- Package version: 12.3.10 -->
<!-- *** -->
<!-- Copyright (c) 1999-2024 DataReel Software Development -->
<!-- *********************************************************** -->
<!-- *********** HTML Page Description and Details ************* -->
<!-- *********************************************************** -->
<!-- *** -->
<!-- START OF LICENSING AND DISCLAIMER AGREEMENT -->
<!-- *** -->
<!-- This HTML page and its derivatives are copyright (c) 1999-2024, by -->
<!-- DataReel Software Development. This HTML page and any derivative Web -->
<!-- objects are published on the Internet for public viewing only. -->
<!-- Reproduction of any HTML page and/or Web objects published on -->
<!-- this Website is prohibited unless authorized in writing by -->
<!-- DataReel Software Development or authorized reseller. Reproduction of any -->
<!-- third party code used to produce pages on this Website is subject to -->
<!-- the third party licensing and distribution agreement. -->
<!-- *** -->
<!-- THIS SOFTWARE IS PROVIDED AS IS WITHOUT WARRANTY OF ANY KIND. THE -->
<!-- ENTIRE RISK OF THE QUALITY AND PERFORMANCE OF THIS SOFTWARE IS WITH -->
<!-- YOU. SHOULD ANY ELEMENT OF THIS SOFTWARE PROVE DEFECTIVE, YOU WILL -->
<!-- ASSUME THE COST OF ALL NECESSARY SERVICING, REPAIR, OR CORRECTION. -->
<!-- *** -->
<!-- *********************************************************** -->
<!-- *************** THIRD PARTY ACKNOWLEDGMENT **************** -->
<!-- *********************************************************** -->
<!-- *** -->
<!-- NONE -->
<!-- *** -->
<!-- END OF LICENSING AND DISCLAIMER AGREEMENT -->
<!-- *** -->
<!-- HTML Internet page -->
<!-- *********************************************************** -->
<!-- PAGE CONTENT STARTS BELOW -->

<html lang="en" data-bs-theme="auto">
  <head>
<!--HEADSTART-->
<!--HEADEND-->
    <title>gxderror class</title>
    </head>
    <body>




<P><!-- HTML file generated by: inc2help version 1034.101 --></P>
<H1 ALIGN="CENTER">Database Error Codes</H1>
<P><HR></P>
<B><U><FONT SIZE=4><P>Topics</B></U></FONT>:</P>
<P><A HREF="#Overview">Overview</A><BR>
<A HREF="#ConditionalDirectives">Conditional Directives</A><BR>
<A HREF="#Enumerations">Enumerations</A><BR>
<A HREF="#ExceptionClasses">Exception Classes</A><BR>
<A HREF="#Functions">Functions</A></P>
<P><HR></P>
<P><!-- New Section --><A NAME="Overview"><B><FONT SIZE=4>Overview</A></B></FONT> </P>
<P>The database engine error functions and classes are used to catch and/or record database exceptions that occur during run-time. This implementation can be used with or without C++ built-in exception handling. If C++ exception handling is not enabled then the gxDatabaseError enumerated constants can be used to evaluate database errors.</P>
<P><HR></P>
<P><!-- New Section --><A NAME="ConditionalDirectives"><B><FONT SIZE=4>Conditional Directives</A></B></FONT> </P>
<B><P>__CPP_EXCEPTIONS__</B> - Directive used to enable C++ exception handling.</P>
<P><HR></P>
<P><!-- New Section --><A NAME="Enumerations"><B><FONT SIZE=4>Enumerations</A></B></FONT> </P>
<P>Integer constants used to record the last reported error condition and as return values for the database engine file functions. </P>
<PRE>enum <A NAME="gxDatabaseError">gxDatabaseError</A> { // Database error codes
  <B>gxDBASE_NO_ERROR</B> = 0,        // No errors reported
  <B>gxDBASE_INVALID_CODE</B>,        // Invalid error code
  <B>gxDBASE_ACCESS_VIOLATION</B>,    // Access Violation
  <B>gxDBASE_ASSERT_ERROR</B>,        // Assertion failed
  <B>gxDBASE_BAD_CLASS_ID</B>,        // Wrong object type
  <B>gxDBASE_BAD_OBJECT_ADDRESS</B>,  // Bad object address
  <B>gxDBASE_BAD_REFERENCE</B>,       // Bad Reference
  <B>gxDBASE_BLOCK_ALLOC_ERROR</B>,   // Block allocation error
  <B>gxDBASE_CACHE_FULL</B>,          // Cache full
  <B>gxDBASE_CHECKSUM_ERROR</B>,      // Checksum Error
  <B>gxDBASE_DIVIDEBY_ZERO</B>,       // Divide By Zero Error
  <B>gxDBASE_DUPLICATE_ENTRY</B>,     // Duplicate entry error
  <B>gxDBASE_ENTRY_NOT_FOUND</B>,     // Specified entry was not found
  <B>gxDBASE_EOF_ERROR</B>,           // Unexpected end of file
  <B>gxDBASE_FILE_CLOSE_ERROR</B>,    // Error closing file
  <B>gxDBASE_FILE_CORRUPT</B>,        // File corrupted
  <B>gxDBASE_FILE_CREATION_ERROR</B>, // Error creating file
  <B>gxDBASE_FILE_EXISTS</B>,         // File already exists
  <B>gxDBASE_FILE_NOT_OPEN_ERROR</B>, // Trying to use a closed file
  <B>gxDBASE_FILE_NOT_READY</B>,      // File not ready (failed or closed file)
  <B>gxDBASE_FILE_NOT_WRITEABLE</B>,  // Could not write to file 
  <B>gxDBASE_FILE_OPEN_ERROR</B>,     // Error opening file
  <B>gxDBASE_FILE_POSITION_ERROR</B>, // Cannot obtain the current file position
  <B>gxDBASE_FILE_READ_ERROR</B>,     // Error reading file  
  <B>gxDBASE_FILE_SEEK_ERROR</B>,     // Error seeking in file
  <B>gxDBASE_FILE_WRITE_ERROR</B>,    // Error writing to file
  <B>gxDBASE_INSERTION_ERROR</B>,     // Error inserting database entry
  <B>gxDBASE_MEM_ALLOC_ERROR</B>,     // Memory allocation error
  <B>gxDBASE_NO_DATABASE_OPEN</B>,    // No database open
  <B>gxDBASE_NO_FILE_EXISTS</B>,      // No such file exists
  <B>gxDBASE_NO_OBJECTS_EXIST</B>,    // No objects exist
  <B>gxDBASE_NULL_PTR</B>,            // Accessing a null pointer 
  <B>gxDBASE_OBJECT_EXISTS</B>,       // Object already exists
  <B>gxDBASE_OPEN_FILE_REFERENCE</B>, // Another object is referencing this file
  <B>gxDBASE_OVERFLOW</B>,            // Math overflow
  <B>gxDBASE_PARSE_ERROR</B>,         // Parse error
  <B>gxDBASE_PATH_ERROR</B>,          // Invalid path
  <B>gxDBASE_READ_ONLY_FILE</B>,      // Trying to write to read-only file
  <B>gxDBASE_STACK_EMPTY</B>,         // Stack empty
  <B>gxDBASE_STACK_FULL</B>,          // Stack full
  <B>gxDBASE_SYNC_ERROR</B>,          // Synchronization Error
  <B>gxDBASE_UNDERFLOW</B>,           // Math under-flow
  <B>gxDBASE_WRONG_FILE_TYPE</B>,     // Wrong file type

  // Persistent lock error codes
  <B>gxDBASE_INVALID_LOCK_TYPE</B>,        // Invalid lock type specified
  <B>gxDBASE_FILELOCK_ACCESS_ERROR</B>,    // File lock cannot be accessed
  <B>gxDBASE_FILELOCK_ERROR</B>,           // Error locking the file
  <B>gxDBASE_RECORDLOCK_ACCESS_ERROR</B>,  // Record lock cannot be accessed
  <B>gxDBASE_RECORDLOCK_ERROR</B>          // Error locking a record
};</PRE>
<P><HR></P>
<P><A NAME="ExceptionClasses"><!-- New Section --><B><FONT SIZE=4>Exception Classes</A></P>
</B></FONT><P>Class declarations for exceptions representing program errors. This implementation is provided for optional use with the C++ built-in exception handling routines "try", "catch", and "throw."</P>
<B><P><A NAME="gxCDatabaseException">gxCDatabaseException</A></B> - Exception class thrown by the database engine file functions to indicate that a fatal file error condition has been reached. All database engine file calls must catch this exception and evaluate it by testing the gxDatabase internal error variable.</P>
<P><HR></P>
<B><FONT SIZE=4><P><A NAME="Functions">Functions</A></P>
</FONT><FONT COLOR="#000080"><P>const char *gxDatabaseExceptionMessage(gxDatabaseError err)</B></FONT> - Standalone function that returns a null terminated string, which can be use to log or print a database exception message.</P>
<P><HR></P>
<P ALIGN="CENTER"><CENTER><TABLE BORDER CELLSPACING=1 BORDERCOLOR="#000000">
<TR><TD VALIGN="MIDDLE">
<P ALIGN="CENTER"><B>End Of Document</B></TD>
</TR>
</TABLE>
</CENTER></P>

<P>&nbsp;</P>


  </body>
</html>

<!-- PAGE CONTENT ENDS ABOVE -->
<!-- *********************************************************** -->
<!-- ******************************* -->
<!-- ********* End of Page ********* -->
<!-- ******************************* -->
